/*
 * Copyright (C) 2011-2019 Aestas/IT
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'groovy'
  id 'eclipse'
  id 'idea'
  id 'org.kordamp.gradle.build-scan' version '0.19.0'
  id 'org.kordamp.gradle.project'    version '0.19.0'
  id 'org.kordamp.gradle.plugin'     version '0.19.0'
  id 'org.sonarqube'                 version '2.7'
  id 'org.ajoberstar.git-publish'    version '0.3.2'
}

buildScan {
  termsOfServiceAgree = 'yes'
}

config {

  release = (rootProject.findProperty('release') ?: false).toBoolean()

  info {
    name          = 'Sshoogr Gradle Plugin'
    vendor        = 'AestasIT'
    description   = 'A Gradle plugin for working with remote SSH servers'
    inceptionYear = '2011'
    tags          = ['ssh']

    links {
      website      = "https://github.com/aestasit/${rootProject.name}"
      issueTracker = "https://github.com/aestasit/${rootProject.name}/issues"
      scm          = "https://github.com/aestasit/${rootProject.name}.git"
    }

    scm {
      url                 = "https://github.com/aestasit/${rootProject.name}.git"
      connection          = "https://github.com/aestasit/${rootProject.name}.git"
      developerConnection = "https://github.com/aestasit/${rootProject.name}.git"
    }

    specification {
      enabled = false
    }

    implementation {
      enabled = false
    }

    people {
      person {
        id    = 'aadamovich'
        name  = 'Andrey Adamovich'
        roles = ['developer', 'author']
      }
    }

    repositories {
      repository {
        name = 'sonatypeRelease'
        url  = ossReleaseRepositoryUrl
        credentials {
          username = ossReleaseRepositoryUserName
          password = ossReleaseRepositoryPassword
        }
      }
      repository {
        name = 'sonatypeSnapshots'
        url  = ossSnapshotRepositoryUrl
        credentials {
          username = ossSnapshotRepositoryUserName
          password = ossSnapshotRepositoryPassword
        }
      }
    }

  }

  javadoc {
    enabled = false
  }

  groovydoc {
    enabled        = true
    replaceJavadoc = true
    options {
      link 'https://docs.gradle.org/5.0/javadoc/', 'org.gradle.'
    }
  }

  licensing {
    licenses {
      license {
        id = 'Apache-2.0'
      }
    }
  }

  publishing {
    signing = !project.version.endsWith('-SNAPSHOT')
    releasesRepository  = 'sonatypeRelease'
    snapshotsRepository = 'sonatypeSnapshots'
  }

  plugin {
    enabled             = true
    id                  = 'com.aestasit.sshoogr'
    implementationClass = 'com.aestasit.gradle.plugins.ssh.SshPlugin'
  }

}

repositories {
  jcenter()
}

dependencies {
  compile gradleApi()
  compile "org.slf4j:slf4j-api:${slf4jVersion}"
  compile "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
  compile "ch.qos.logback:logback-classic:${logbackVersion}"
  compile("com.aestasit.infrastructure.sshoogr:sshoogr:${sshoogrVersion}") {
    exclude group: 'org.codehaus.groovy', module: 'groovy-all'
  }
  testCompile 'com.aestasit.infrastructure.mock:groovy-sshd-mock:0.3'
  testCompile 'commons-io:commons-io:2.6'
  testCompile 'junit:junit:4.12'
}

configurations {
  all*.exclude group: 'commons-logging'
  all*.exclude group: 'log4j'
  all*.exclude module: 'slf4j-simple'
}

normalization {
  runtimeClasspath {
    ignore('/META-INF/MANIFEST.MF')
  }
}

gitPublish {
  repoUri = rootProject.extensions.findByName('config').info.links.scm
  branch  = 'gh-pages'
  contents {
    from(groovydoc.outputs.files) {
      into 'docs/groovydoc'
    }
  }
}

gitPublishCommit.dependsOn(groovydoc)
